nohup: ignoring input
/home/umang23239/Chemi/IP_MT22209/Input Files/SMILES_CDK5/chek_lazy.py:4: DtypeWarning: Columns (142,151,160,169,178,187,196,205,214,223,232,349,358,367,376,385,394,403,412,421,430,439,448,456,464,472,480,488,496,504,512,520,528,536,544,552,560,568,576,584,592,600,608,616,624,632,640,1101,1106,1180,1185,1572,1573,1575) have mixed types. Specify dtype option on import or set low_memory=False.
  data=pd.read_csv("/home/umang23239/Chemi/MT23239/Input Files/SMILES_CDK5/final_data_label.csv").drop_duplicates(subset='Canonical SMILES',keep='first').dropna(axis=0).reset_index(drop=True)

  0%|          | 0/42 [00:00<?, ?it/s]
  2%|▏         | 1/42 [00:13<09:06, 13.32s/it]
  5%|▍         | 2/42 [00:23<07:49, 11.74s/it]
  7%|▋         | 3/42 [00:29<05:54,  9.10s/it]
 10%|▉         | 4/42 [00:31<03:55,  6.19s/it]
 14%|█▍        | 6/42 [00:31<01:47,  2.98s/it]
 17%|█▋        | 7/42 [01:55<14:39, 25.12s/it]
 19%|█▉        | 8/42 [01:55<10:16, 18.14s/it]
 21%|██▏       | 9/42 [02:23<11:27, 20.84s/it]
 24%|██▍       | 10/42 [02:28<08:37, 16.16s/it]
 26%|██▌       | 11/42 [02:33<06:44, 13.05s/it]
 29%|██▊       | 12/42 [03:18<11:15, 22.51s/it]
 31%|███       | 13/42 [14:14<1:41:44, 210.51s/it]
 33%|███▎      | 14/42 [14:23<1:10:11, 150.42s/it]
 36%|███▌      | 15/42 [14:23<47:32, 105.67s/it]  
 38%|███▊      | 16/42 [14:24<32:11, 74.28s/it] 
 40%|████      | 17/42 [14:41<23:47, 57.11s/it]
 43%|████▎     | 18/42 [16:27<28:40, 71.69s/it]
 45%|████▌     | 19/42 [16:27<19:15, 50.26s/it]
 48%|████▊     | 20/42 [18:28<26:10, 71.38s/it]
 50%|█████     | 21/42 [18:28<17:30, 50.04s/it]
 52%|█████▏    | 22/42 [18:54<14:20, 43.03s/it]
 55%|█████▍    | 23/42 [18:59<09:57, 31.46s/it]
 57%|█████▋    | 24/42 [19:00<06:44, 22.46s/it]
 60%|█████▉    | 25/42 [19:05<04:50, 17.12s/it]
 62%|██████▏   | 26/42 [19:56<07:14, 27.18s/it]
 64%|██████▍   | 27/42 [19:57<04:50, 19.34s/it]
 67%|██████▋   | 28/42 [20:00<03:24, 14.63s/it]
 69%|██████▉   | 29/42 [20:30<04:08, 19.12s/it]
 71%|███████▏  | 30/42 [20:30<02:41, 13.49s/it]
 74%|███████▍  | 31/42 [20:43<02:25, 13.27s/it]
 76%|███████▌  | 32/42 [20:45<01:38,  9.82s/it]
 81%|████████  | 34/42 [22:31<03:57, 29.71s/it]
 83%|████████▎ | 35/42 [22:31<02:36, 22.41s/it]
 86%|████████▌ | 36/42 [22:32<01:40, 16.77s/it]
 88%|████████▊ | 37/42 [22:32<01:01, 12.29s/it]
 90%|█████████ | 38/42 [22:33<00:36,  9.16s/it]
 93%|█████████▎| 39/42 [22:34<00:20,  6.73s/it]
 95%|█████████▌| 40/42 [22:37<00:11,  5.76s/it]
 98%|█████████▊| 41/42 [23:45<00:24, 24.05s/it]
100%|██████████| 42/42 [29:01<00:00, 109.98s/it]
100%|██████████| 42/42 [29:01<00:00, 41.46s/it] 
{'Model': 'AdaBoostRegressor', 'R-Squared': 0.4270687480586036, 'Adjusted R-Squared': 1.187921450636778, 'RMSE': 0.8986410138476157, 'Time taken': 13.318440914154053}
{'Model': 'BaggingRegressor', 'R-Squared': 0.5697114721086846, 'Adjusted R-Squared': 1.1411346371483515, 'RMSE': 0.7787801316963003, 'Time taken': 10.638183355331421}
{'Model': 'BayesianRidge', 'R-Squared': 0.5284046383461779, 'Adjusted R-Squared': 1.1546832786224537, 'RMSE': 0.8153043172900692, 'Time taken': 5.953171968460083}
{'Model': 'DecisionTreeRegressor', 'R-Squared': 0.23569829240163842, 'Adjusted R-Squared': 1.2506909600922627, 'RMSE': 1.0379283979634712, 'Time taken': 1.7184793949127197}
{'Model': 'DummyRegressor', 'R-Squared': -0.0010966178362508128, 'Adjusted R-Squared': 1.3283596906502904, 'RMSE': 1.1878811114082373, 'Time taken': 0.06504011154174805}
{'Model': 'ElasticNet', 'R-Squared': -0.0010966178362508128, 'Adjusted R-Squared': 1.3283596906502904, 'RMSE': 1.1878811114082373, 'Time taken': 0.2121884822845459}
{'Model': 'ElasticNetCV', 'R-Squared': 0.5057696753228675, 'Adjusted R-Squared': 1.1621075464940995, 'RMSE': 0.8346409219476217, 'Time taken': 83.59078192710876}
{'Model': 'ExtraTreeRegressor', 'R-Squared': 0.2907469381914459, 'Adjusted R-Squared': 1.2326350042732057, 'RMSE': 0.9998516996950252, 'Time taken': 0.34054112434387207}
{'Model': 'ExtraTreesRegressor', 'R-Squared': 0.6656597720450208, 'Adjusted R-Squared': 1.1096635947692333, 'RMSE': 0.6864822251582794, 'Time taken': 27.55248999595642}
{'Model': 'GammaRegressor', 'R-Squared': 0.508180227110167, 'Adjusted R-Squared': 1.1613168855078653, 'RMSE': 0.8326030012407881, 'Time taken': 4.749769449234009}
{'Model': 'GaussianProcessRegressor', 'R-Squared': -22.88725667824582, 'Adjusted R-Squared': 8.835020190464629, 'RMSE': 5.802539662423305, 'Time taken': 5.554211378097534}
{'Model': 'GradientBoostingRegressor', 'R-Squared': 0.5809370064087683, 'Adjusted R-Squared': 1.137452661897924, 'RMSE': 0.7685544386552539, 'Time taken': 45.072577714920044}
{'Model': 'HistGradientBoostingRegressor', 'R-Squared': 0.6601755050272977, 'Adjusted R-Squared': 1.1114624343510464, 'RMSE': 0.6920895943886989, 'Time taken': 655.9897880554199}
{'Model': 'HuberRegressor', 'R-Squared': 0.4572932543148047, 'Adjusted R-Squared': 1.178007812584744, 'RMSE': 0.8746163453805952, 'Time taken': 8.68187689781189}
{'Model': 'KNeighborsRegressor', 'R-Squared': 0.6336907072025889, 'Adjusted R-Squared': 1.120149448037551, 'RMSE': 0.7185532329425335, 'Time taken': 0.4400327205657959}
{'Model': 'KernelRidge', 'R-Squared': -22.828942690565245, 'Adjusted R-Squared': 8.8158932025054, 'RMSE': 5.795452704058506, 'Time taken': 0.6614727973937988}
{'Model': 'Lars', 'R-Squared': -8018808085.740191, 'Adjusted R-Squared': 2630169053.450783, 'RMSE': 106313.86068225224, 'Time taken': 16.8798611164093}
{'Model': 'LarsCV', 'R-Squared': 0.0008173948753652516, 'Adjusted R-Squared': 1.3277318944808802, 'RMSE': 1.18674500361946, 'Time taken': 105.8039927482605}
{'Model': 'Lasso', 'R-Squared': -0.0010966178362508128, 'Adjusted R-Squared': 1.3283596906502904, 'RMSE': 1.1878811114082373, 'Time taken': 0.16360998153686523}
{'Model': 'LassoCV', 'R-Squared': 0.5053798179318704, 'Adjusted R-Squared': 1.1622354197183464, 'RMSE': 0.8349700466216954, 'Time taken': 120.72404456138611}
{'Model': 'LassoLars', 'R-Squared': -0.0010966178362508128, 'Adjusted R-Squared': 1.3283596906502904, 'RMSE': 1.1878811114082373, 'Time taken': 0.1871182918548584}
{'Model': 'LassoLarsCV', 'R-Squared': 0.47656842670843413, 'Adjusted R-Squared': 1.1716855560396335, 'RMSE': 0.8589441721688055, 'Time taken': 26.659775733947754}
LassoLarsIC model failed to execute
You are using LassoLarsIC in the case where the number of samples is smaller than the number of features. In this setting, getting a good estimate for the variance of the noise is not possible. Provide an estimate of the noise variance in the constructor.
{'Model': 'LinearRegression', 'R-Squared': -4.9605529395887834e+17, 'Adjusted R-Squared': 1.627061364185121e+17, 'RMSE': 836180477.9411683, 'Time taken': 1.4630324840545654}
{'Model': 'LinearSVR', 'R-Squared': 0.29700440317706833, 'Adjusted R-Squared': 1.2305825557579215, 'RMSE': 0.9954312760814367, 'Time taken': 4.644243478775024}
{'Model': 'MLPRegressor', 'R-Squared': 0.39108905168793096, 'Adjusted R-Squared': 1.1997227910463586, 'RMSE': 0.9264284233166206, 'Time taken': 50.65169858932495}
{'Model': 'NuSVR', 'R-Squared': 0.6244263192669595, 'Adjusted R-Squared': 1.1231881672804374, 'RMSE': 0.7275830193631821, 'Time taken': 1.06070876121521}
{'Model': 'OrthogonalMatchingPursuit', 'R-Squared': 0.44491183527278744, 'Adjusted R-Squared': 1.1820689180305257, 'RMSE': 0.8845369171503767, 'Time taken': 3.638073205947876}
{'Model': 'OrthogonalMatchingPursuitCV', 'R-Squared': 0.45617213107727683, 'Adjusted R-Squared': 1.1783755410066532, 'RMSE': 0.8755192702406853, 'Time taken': 29.579630374908447}
{'Model': 'PassiveAggressiveRegressor', 'R-Squared': 0.030619762625900715, 'Adjusted R-Squared': 1.3179567178587046, 'RMSE': 1.1689126547187925, 'Time taken': 0.35181188583374023}
{'Model': 'PoissonRegressor', 'R-Squared': 0.5334412279132319, 'Adjusted R-Squared': 1.15303127724446, 'RMSE': 0.8109389477910789, 'Time taken': 12.764323234558105}
{'Model': 'QuantileRegressor', 'R-Squared': -0.10213304817065194, 'Adjusted R-Squared': 1.361499639799974, 'RMSE': 1.2463843641797971, 'Time taken': 1.7671799659729004}
RANSACRegressor model failed to execute
`min_samples` may not be larger than number of samples: n_samples = 1805.
{'Model': 'RandomForestRegressor', 'R-Squared': 0.6246988590712237, 'Adjusted R-Squared': 1.1230987742246386, 'RMSE': 0.7273189815314638, 'Time taken': 105.75653433799744}
{'Model': 'Ridge', 'R-Squared': 0.4280680082647572, 'Adjusted R-Squared': 1.1875936932891595, 'RMSE': 0.8978570034730341, 'Time taken': 0.28090810775756836}
{'Model': 'RidgeCV', 'R-Squared': 0.49350085606210725, 'Adjusted R-Squared': 1.166131719211629, 'RMSE': 0.8449370175403025, 'Time taken': 0.8318302631378174}
{'Model': 'SGDRegressor', 'R-Squared': -1.8760786047246788e+22, 'Adjusted R-Squared': 6.153537823496947e+21, 'RMSE': 162614959348.17133, 'Time taken': 0.2837193012237549}
{'Model': 'SVR', 'R-Squared': 0.626958979688671, 'Adjusted R-Squared': 1.122357454662116, 'RMSE': 0.7251256615907942, 'Time taken': 1.1159448623657227}
{'Model': 'TransformedTargetRegressor', 'R-Squared': -4.9605529395887834e+17, 'Adjusted R-Squared': 1.627061364185121e+17, 'RMSE': 836180477.9411683, 'Time taken': 0.6437170505523682}
{'Model': 'TweedieRegressor', 'R-Squared': 0.5066851012401439, 'Adjusted R-Squared': 1.1618072867932328, 'RMSE': 0.8338675921654103, 'Time taken': 3.3874781131744385}
{'Model': 'XGBRegressor', 'R-Squared': 0.5916151543150026, 'Adjusted R-Squared': 1.1339502293846793, 'RMSE': 0.758699483734023, 'Time taken': 68.22516083717346}
[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 2.347161 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 291142
[LightGBM] [Info] Number of data points in the train set: 1805, number of used features: 1361
[LightGBM] [Info] Start training from score 5.696650
{'Model': 'LGBMRegressor', 'R-Squared': 0.6405871903168059, 'Adjusted R-Squared': 1.1178874015760876, 'RMSE': 0.7117570136074388, 'Time taken': 315.4372968673706}
                                     Adjusted R-Squared  ...  Time Taken
Model                                                    ...            
SGDRegressor                  6153537823496946581504.00  ...        0.28
LinearRegression                  162706136418512096.00  ...        1.46
TransformedTargetRegressor        162706136418512096.00  ...        0.64
Lars                                      2630169053.45  ...       16.88
GaussianProcessRegressor                           8.84  ...        5.55
KernelRidge                                        8.82  ...        0.66
QuantileRegressor                                  1.36  ...        1.77
ElasticNet                                         1.33  ...        0.21
LassoLars                                          1.33  ...        0.19
Lasso                                              1.33  ...        0.16
DummyRegressor                                     1.33  ...        0.07
LarsCV                                             1.33  ...      105.80
PassiveAggressiveRegressor                         1.32  ...        0.35
DecisionTreeRegressor                              1.25  ...        1.72
ExtraTreeRegressor                                 1.23  ...        0.34
LinearSVR                                          1.23  ...        4.64
MLPRegressor                                       1.20  ...       50.65
AdaBoostRegressor                                  1.19  ...       13.32
Ridge                                              1.19  ...        0.28
OrthogonalMatchingPursuit                          1.18  ...        3.64
OrthogonalMatchingPursuitCV                        1.18  ...       29.58
HuberRegressor                                     1.18  ...        8.68
LassoLarsCV                                        1.17  ...       26.66
RidgeCV                                            1.17  ...        0.83
LassoCV                                            1.16  ...      120.72
ElasticNetCV                                       1.16  ...       83.59
TweedieRegressor                                   1.16  ...        3.39
GammaRegressor                                     1.16  ...        4.75
BayesianRidge                                      1.15  ...        5.95
PoissonRegressor                                   1.15  ...       12.76
BaggingRegressor                                   1.14  ...       10.64
GradientBoostingRegressor                          1.14  ...       45.07
XGBRegressor                                       1.13  ...       68.23
NuSVR                                              1.12  ...        1.06
RandomForestRegressor                              1.12  ...      105.76
SVR                                                1.12  ...        1.12
KNeighborsRegressor                                1.12  ...        0.44
LGBMRegressor                                      1.12  ...      315.44
HistGradientBoostingRegressor                      1.11  ...      655.99
ExtraTreesRegressor                                1.11  ...       27.55

[40 rows x 4 columns]
